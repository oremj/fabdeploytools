#!/usr/bin/python

import getpass
import os
import sys

import argparse

from fabdeploytools import envs
from fabric.api import env, execute, parallel, task, roles, run


def execute_cmd(cmd, poolsize, hosttypes):
    @task
    @parallel(pool_size=poolsize)
    @roles(hosttypes)
    def runit(cmd):
        run(cmd, warn_only=True)

    execute(runit, ' '.join(cmd))

parser = argparse.ArgumentParser(description='Run commands on a host group')
parser.add_argument('-p', '--poolsize', default=30, type=int)
parser.add_argument('-l', '--listhosttypes', action='store_true')
parser.add_argument('-L', '--listenvs', action='store_true')
parser.add_argument('--listhosts', action='store_true')
parser.add_argument('-u', '--user', default=getpass.getuser())
parser.add_argument('env', nargs='?')
parser.add_argument('hosttype', nargs='?')
parser.add_argument('cmd', nargs=argparse.REMAINDER)

args = parser.parse_args()

env.ok_ret_codes.append(2)  # puppet often returns 2
env.user = args.user

if args.listenvs:
    for f in os.listdir('/etc/deploytools/envs'):
        envs.loadenv(f)
        print "%s: %s" % (f, ' '.join(env.roledefs.keys()))
    sys.exit()

envs.loadenv(args.env)
if args.listhosttypes:
    for k, v in env.roledefs.iteritems():
        print "%s: %s" % (k, ' '.join(v))
    sys.exit()

if args.listhosts:
    for hosttype in args.hosttype.split(','):
        for host in env.roledefs.get(hosttype, []):
            print host
    sys.exit()

execute_cmd(args.cmd, args.poolsize, args.hosttype.split(','))
